// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VMEntityFilterResultOrderByInput Vm entity filter result order by input
//
// swagger:model VmEntityFilterResultOrderByInput
type VMEntityFilterResultOrderByInput string

func NewVMEntityFilterResultOrderByInput(value VMEntityFilterResultOrderByInput) *VMEntityFilterResultOrderByInput {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VMEntityFilterResultOrderByInput.
func (m VMEntityFilterResultOrderByInput) Pointer() *VMEntityFilterResultOrderByInput {
	return &m
}

const (

	// VMEntityFilterResultOrderByInputIDASC captures enum value "id_ASC"
	VMEntityFilterResultOrderByInputIDASC VMEntityFilterResultOrderByInput = "id_ASC"

	// VMEntityFilterResultOrderByInputIDDESC captures enum value "id_DESC"
	VMEntityFilterResultOrderByInputIDDESC VMEntityFilterResultOrderByInput = "id_DESC"
)

// for schema
var vmEntityFilterResultOrderByInputEnum []interface{}

func init() {
	var res []VMEntityFilterResultOrderByInput
	if err := json.Unmarshal([]byte(`["id_ASC","id_DESC"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vmEntityFilterResultOrderByInputEnum = append(vmEntityFilterResultOrderByInputEnum, v)
	}
}

func (m VMEntityFilterResultOrderByInput) validateVMEntityFilterResultOrderByInputEnum(path, location string, value VMEntityFilterResultOrderByInput) error {
	if err := validate.EnumCase(path, location, value, vmEntityFilterResultOrderByInputEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this Vm entity filter result order by input
func (m VMEntityFilterResultOrderByInput) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVMEntityFilterResultOrderByInputEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this Vm entity filter result order by input based on context it is used
func (m VMEntityFilterResultOrderByInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
