// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// DisassociateSystemServiceFromObsServiceResultType disassociate system service from obs service result type
//
// swagger:model DisassociateSystemServiceFromObsServiceResultType
type DisassociateSystemServiceFromObsServiceResultType string

func NewDisassociateSystemServiceFromObsServiceResultType(value DisassociateSystemServiceFromObsServiceResultType) *DisassociateSystemServiceFromObsServiceResultType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated DisassociateSystemServiceFromObsServiceResultType.
func (m DisassociateSystemServiceFromObsServiceResultType) Pointer() *DisassociateSystemServiceFromObsServiceResultType {
	return &m
}

const (

	// DisassociateSystemServiceFromObsServiceResultTypeFAIL captures enum value "FAIL"
	DisassociateSystemServiceFromObsServiceResultTypeFAIL DisassociateSystemServiceFromObsServiceResultType = "FAIL"

	// DisassociateSystemServiceFromObsServiceResultTypeSUCCESS captures enum value "SUCCESS"
	DisassociateSystemServiceFromObsServiceResultTypeSUCCESS DisassociateSystemServiceFromObsServiceResultType = "SUCCESS"
)

// for schema
var disassociateSystemServiceFromObsServiceResultTypeEnum []interface{}

func init() {
	var res []DisassociateSystemServiceFromObsServiceResultType
	if err := json.Unmarshal([]byte(`["FAIL","SUCCESS"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		disassociateSystemServiceFromObsServiceResultTypeEnum = append(disassociateSystemServiceFromObsServiceResultTypeEnum, v)
	}
}

func (m DisassociateSystemServiceFromObsServiceResultType) validateDisassociateSystemServiceFromObsServiceResultTypeEnum(path, location string, value DisassociateSystemServiceFromObsServiceResultType) error {
	if err := validate.EnumCase(path, location, value, disassociateSystemServiceFromObsServiceResultTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this disassociate system service from obs service result type
func (m DisassociateSystemServiceFromObsServiceResultType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateDisassociateSystemServiceFromObsServiceResultTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this disassociate system service from obs service result type based on context it is used
func (m DisassociateSystemServiceFromObsServiceResultType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
