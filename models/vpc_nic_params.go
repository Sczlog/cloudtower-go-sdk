// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VpcNicParams vpc nic params
//
// swagger:model VpcNicParams
type VpcNicParams struct {

	// floating ip id
	FloatingIPID *string `json:"floating_ip_id,omitempty"`

	// ip addresses
	IPAddresses []string `json:"ip_addresses,omitempty"`

	// vpc id
	// Required: true
	VpcID *string `json:"vpc_id"`

	// vpc subnet id
	// Required: true
	VpcSubnetID *string `json:"vpc_subnet_id"`
}

// Validate validates this vpc nic params
func (m *VpcNicParams) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVpcID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVpcSubnetID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VpcNicParams) validateVpcID(formats strfmt.Registry) error {

	if err := validate.Required("vpc_id", "body", m.VpcID); err != nil {
		return err
	}

	return nil
}

func (m *VpcNicParams) validateVpcSubnetID(formats strfmt.Registry) error {

	if err := validate.Required("vpc_subnet_id", "body", m.VpcSubnetID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this vpc nic params based on context it is used
func (m *VpcNicParams) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VpcNicParams) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VpcNicParams) UnmarshalBinary(b []byte) error {
	var res VpcNicParams
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
