// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VirtualPrivateCloudSecurityPolicyApplyInput virtual private cloud security policy apply input
//
// swagger:model VirtualPrivateCloudSecurityPolicyApplyInput
type VirtualPrivateCloudSecurityPolicyApplyInput struct {

	// communicable
	// Required: true
	Communicable *bool `json:"communicable"`

	// security group id
	// Required: true
	SecurityGroupID *string `json:"security_group_id"`
}

// Validate validates this virtual private cloud security policy apply input
func (m *VirtualPrivateCloudSecurityPolicyApplyInput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCommunicable(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSecurityGroupID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *VirtualPrivateCloudSecurityPolicyApplyInput) validateCommunicable(formats strfmt.Registry) error {

	if err := validate.Required("communicable", "body", m.Communicable); err != nil {
		return err
	}

	return nil
}

func (m *VirtualPrivateCloudSecurityPolicyApplyInput) validateSecurityGroupID(formats strfmt.Registry) error {

	if err := validate.Required("security_group_id", "body", m.SecurityGroupID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this virtual private cloud security policy apply input based on context it is used
func (m *VirtualPrivateCloudSecurityPolicyApplyInput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VirtualPrivateCloudSecurityPolicyApplyInput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VirtualPrivateCloudSecurityPolicyApplyInput) UnmarshalBinary(b []byte) error {
	var res VirtualPrivateCloudSecurityPolicyApplyInput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
