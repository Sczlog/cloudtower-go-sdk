// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VirtualPrivateCloudNetworkPolicyRulePortProtocol virtual private cloud network policy rule port protocol
//
// swagger:model VirtualPrivateCloudNetworkPolicyRulePortProtocol
type VirtualPrivateCloudNetworkPolicyRulePortProtocol string

func NewVirtualPrivateCloudNetworkPolicyRulePortProtocol(value VirtualPrivateCloudNetworkPolicyRulePortProtocol) *VirtualPrivateCloudNetworkPolicyRulePortProtocol {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VirtualPrivateCloudNetworkPolicyRulePortProtocol.
func (m VirtualPrivateCloudNetworkPolicyRulePortProtocol) Pointer() *VirtualPrivateCloudNetworkPolicyRulePortProtocol {
	return &m
}

const (

	// VirtualPrivateCloudNetworkPolicyRulePortProtocolICMP captures enum value "ICMP"
	VirtualPrivateCloudNetworkPolicyRulePortProtocolICMP VirtualPrivateCloudNetworkPolicyRulePortProtocol = "ICMP"

	// VirtualPrivateCloudNetworkPolicyRulePortProtocolTCP captures enum value "TCP"
	VirtualPrivateCloudNetworkPolicyRulePortProtocolTCP VirtualPrivateCloudNetworkPolicyRulePortProtocol = "TCP"

	// VirtualPrivateCloudNetworkPolicyRulePortProtocolUDP captures enum value "UDP"
	VirtualPrivateCloudNetworkPolicyRulePortProtocolUDP VirtualPrivateCloudNetworkPolicyRulePortProtocol = "UDP"
)

// for schema
var virtualPrivateCloudNetworkPolicyRulePortProtocolEnum []interface{}

func init() {
	var res []VirtualPrivateCloudNetworkPolicyRulePortProtocol
	if err := json.Unmarshal([]byte(`["ICMP","TCP","UDP"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		virtualPrivateCloudNetworkPolicyRulePortProtocolEnum = append(virtualPrivateCloudNetworkPolicyRulePortProtocolEnum, v)
	}
}

func (m VirtualPrivateCloudNetworkPolicyRulePortProtocol) validateVirtualPrivateCloudNetworkPolicyRulePortProtocolEnum(path, location string, value VirtualPrivateCloudNetworkPolicyRulePortProtocol) error {
	if err := validate.EnumCase(path, location, value, virtualPrivateCloudNetworkPolicyRulePortProtocolEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this virtual private cloud network policy rule port protocol
func (m VirtualPrivateCloudNetworkPolicyRulePortProtocol) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVirtualPrivateCloudNetworkPolicyRulePortProtocolEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this virtual private cloud network policy rule port protocol based on context it is used
func (m VirtualPrivateCloudNetworkPolicyRulePortProtocol) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
