// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateVsphereEsxiAccountParamsData update vsphere esxi account params data
//
// swagger:model UpdateVsphereEsxiAccountParamsData
type UpdateVsphereEsxiAccountParamsData struct {

	// esxi account id
	// Required: true
	EsxiAccountID *string `json:"esxi_account_id"`

	// ip
	// Required: true
	IP *string `json:"ip"`

	// password
	Password *string `json:"password,omitempty"`

	// port
	Port *int32 `json:"port,omitempty"`

	// username
	// Required: true
	Username *string `json:"username"`
}

// Validate validates this update vsphere esxi account params data
func (m *UpdateVsphereEsxiAccountParamsData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEsxiAccountID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIP(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateUsername(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateVsphereEsxiAccountParamsData) validateEsxiAccountID(formats strfmt.Registry) error {

	if err := validate.Required("esxi_account_id", "body", m.EsxiAccountID); err != nil {
		return err
	}

	return nil
}

func (m *UpdateVsphereEsxiAccountParamsData) validateIP(formats strfmt.Registry) error {

	if err := validate.Required("ip", "body", m.IP); err != nil {
		return err
	}

	return nil
}

func (m *UpdateVsphereEsxiAccountParamsData) validateUsername(formats strfmt.Registry) error {

	if err := validate.Required("username", "body", m.Username); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update vsphere esxi account params data based on context it is used
func (m *UpdateVsphereEsxiAccountParamsData) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdateVsphereEsxiAccountParamsData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdateVsphereEsxiAccountParamsData) UnmarshalBinary(b []byte) error {
	var res UpdateVsphereEsxiAccountParamsData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
