// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// VirtualPrivateCloudNetworkPolicyRuleType virtual private cloud network policy rule type
//
// swagger:model VirtualPrivateCloudNetworkPolicyRuleType
type VirtualPrivateCloudNetworkPolicyRuleType string

func NewVirtualPrivateCloudNetworkPolicyRuleType(value VirtualPrivateCloudNetworkPolicyRuleType) *VirtualPrivateCloudNetworkPolicyRuleType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated VirtualPrivateCloudNetworkPolicyRuleType.
func (m VirtualPrivateCloudNetworkPolicyRuleType) Pointer() *VirtualPrivateCloudNetworkPolicyRuleType {
	return &m
}

const (

	// VirtualPrivateCloudNetworkPolicyRuleTypeALL captures enum value "ALL"
	VirtualPrivateCloudNetworkPolicyRuleTypeALL VirtualPrivateCloudNetworkPolicyRuleType = "ALL"

	// VirtualPrivateCloudNetworkPolicyRuleTypeIPBLOCK captures enum value "IP_BLOCK"
	VirtualPrivateCloudNetworkPolicyRuleTypeIPBLOCK VirtualPrivateCloudNetworkPolicyRuleType = "IP_BLOCK"

	// VirtualPrivateCloudNetworkPolicyRuleTypeSECURITYGROUP captures enum value "SECURITY_GROUP"
	VirtualPrivateCloudNetworkPolicyRuleTypeSECURITYGROUP VirtualPrivateCloudNetworkPolicyRuleType = "SECURITY_GROUP"

	// VirtualPrivateCloudNetworkPolicyRuleTypeSELECTOR captures enum value "SELECTOR"
	VirtualPrivateCloudNetworkPolicyRuleTypeSELECTOR VirtualPrivateCloudNetworkPolicyRuleType = "SELECTOR"
)

// for schema
var virtualPrivateCloudNetworkPolicyRuleTypeEnum []interface{}

func init() {
	var res []VirtualPrivateCloudNetworkPolicyRuleType
	if err := json.Unmarshal([]byte(`["ALL","IP_BLOCK","SECURITY_GROUP","SELECTOR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		virtualPrivateCloudNetworkPolicyRuleTypeEnum = append(virtualPrivateCloudNetworkPolicyRuleTypeEnum, v)
	}
}

func (m VirtualPrivateCloudNetworkPolicyRuleType) validateVirtualPrivateCloudNetworkPolicyRuleTypeEnum(path, location string, value VirtualPrivateCloudNetworkPolicyRuleType) error {
	if err := validate.EnumCase(path, location, value, virtualPrivateCloudNetworkPolicyRuleTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this virtual private cloud network policy rule type
func (m VirtualPrivateCloudNetworkPolicyRuleType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVirtualPrivateCloudNetworkPolicyRuleTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this virtual private cloud network policy rule type based on context it is used
func (m VirtualPrivateCloudNetworkPolicyRuleType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
