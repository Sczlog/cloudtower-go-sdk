// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// ROLEACTION r o l e a c t i o n
//
// swagger:model ROLE_ACTION
type ROLEACTION string

func NewROLEACTION(value ROLEACTION) *ROLEACTION {
	return &value
}

// Pointer returns a pointer to a freshly-allocated ROLEACTION.
func (m ROLEACTION) Pointer() *ROLEACTION {
	return &m
}

const (

	// ROLEACTIONAsterisk captures enum value "*"
	ROLEACTIONAsterisk ROLEACTION = "*"

	// ROLEACTIONMANAGEDATACENTER captures enum value "MANAGE_DATA_CENTER"
	ROLEACTIONMANAGEDATACENTER ROLEACTION = "MANAGE_DATA_CENTER"

	// ROLEACTIONMANAGECLUSTERCONNECTION captures enum value "MANAGE_CLUSTER_CONNECTION"
	ROLEACTIONMANAGECLUSTERCONNECTION ROLEACTION = "MANAGE_CLUSTER_CONNECTION"

	// ROLEACTIONMANAGEHOST captures enum value "MANAGE_HOST"
	ROLEACTIONMANAGEHOST ROLEACTION = "MANAGE_HOST"

	// ROLEACTIONMANAGENICMTU captures enum value "MANAGE_NIC_MTU"
	ROLEACTIONMANAGENICMTU ROLEACTION = "MANAGE_NIC_MTU"

	// ROLEACTIONMANAGEDISK captures enum value "MANAGE_DISK"
	ROLEACTIONMANAGEDISK ROLEACTION = "MANAGE_DISK"

	// ROLEACTIONMANAGEHARDWARETOPO captures enum value "MANAGE_HARDWARE_TOPO"
	ROLEACTIONMANAGEHARDWARETOPO ROLEACTION = "MANAGE_HARDWARE_TOPO"

	// ROLEACTIONMANAGEUSBDEVICE captures enum value "MANAGE_USB_DEVICE"
	ROLEACTIONMANAGEUSBDEVICE ROLEACTION = "MANAGE_USB_DEVICE"

	// ROLEACTIONMANAGEVDS captures enum value "MANAGE_VDS"
	ROLEACTIONMANAGEVDS ROLEACTION = "MANAGE_VDS"

	// ROLEACTIONMANAGEVLAN captures enum value "MANAGE_VLAN"
	ROLEACTIONMANAGEVLAN ROLEACTION = "MANAGE_VLAN"

	// ROLEACTIONMANAGESYSTEMVLAN captures enum value "MANAGE_SYSTEM_VLAN"
	ROLEACTIONMANAGESYSTEMVLAN ROLEACTION = "MANAGE_SYSTEM_VLAN"

	// ROLEACTIONMANAGEISCSIDATASTORE captures enum value "MANAGE_ISCSI_DATA_STORE"
	ROLEACTIONMANAGEISCSIDATASTORE ROLEACTION = "MANAGE_ISCSI_DATA_STORE"

	// ROLEACTIONMANAGENFSDATASTORE captures enum value "MANAGE_NFS_DATA_STORE"
	ROLEACTIONMANAGENFSDATASTORE ROLEACTION = "MANAGE_NFS_DATA_STORE"

	// ROLEACTIONMANAGENVMFDATASTORE captures enum value "MANAGE_NVMF_DATA_STORE"
	ROLEACTIONMANAGENVMFDATASTORE ROLEACTION = "MANAGE_NVMF_DATA_STORE"

	// ROLEACTIONCREATEVM captures enum value "CREATE_VM"
	ROLEACTIONCREATEVM ROLEACTION = "CREATE_VM"

	// ROLEACTIONUPDATEVM captures enum value "UPDATE_VM"
	ROLEACTIONUPDATEVM ROLEACTION = "UPDATE_VM"

	// ROLEACTIONDELETEVM captures enum value "DELETE_VM"
	ROLEACTIONDELETEVM ROLEACTION = "DELETE_VM"

	// ROLEACTIONUPDATEVMADVANCEDSETTING captures enum value "UPDATE_VM_ADVANCED_SETTING"
	ROLEACTIONUPDATEVMADVANCEDSETTING ROLEACTION = "UPDATE_VM_ADVANCED_SETTING"

	// ROLEACTIONUPDATEVMGUEST captures enum value "UPDATE_VM_GUEST"
	ROLEACTIONUPDATEVMGUEST ROLEACTION = "UPDATE_VM_GUEST"

	// ROLEACTIONVMOPERATIONOPENTERMINAL captures enum value "VM_OPERATION_OPEN_TERMINAL"
	ROLEACTIONVMOPERATIONOPENTERMINAL ROLEACTION = "VM_OPERATION_OPEN_TERMINAL"

	// ROLEACTIONVMOPERATIONMIGRATE captures enum value "VM_OPERATION_MIGRATE"
	ROLEACTIONVMOPERATIONMIGRATE ROLEACTION = "VM_OPERATION_MIGRATE"

	// ROLEACTIONVMOPERATIONVMFOLDER captures enum value "VM_OPERATION_VM_FOLDER"
	ROLEACTIONVMOPERATIONVMFOLDER ROLEACTION = "VM_OPERATION_VM_FOLDER"

	// ROLEACTIONVMOPERATIONVMPOWER captures enum value "VM_OPERATION_VM_POWER"
	ROLEACTIONVMOPERATIONVMPOWER ROLEACTION = "VM_OPERATION_VM_POWER"

	// ROLEACTIONVMOPERATIONCLONE captures enum value "VM_OPERATION_CLONE"
	ROLEACTIONVMOPERATIONCLONE ROLEACTION = "VM_OPERATION_CLONE"

	// ROLEACTIONVMOPERATIONINSTALLTOOLS captures enum value "VM_OPERATION_INSTALL_TOOLS"
	ROLEACTIONVMOPERATIONINSTALLTOOLS ROLEACTION = "VM_OPERATION_INSTALL_TOOLS"

	// ROLEACTIONMANAGEVMTEMPLATE captures enum value "MANAGE_VM_TEMPLATE"
	ROLEACTIONMANAGEVMTEMPLATE ROLEACTION = "MANAGE_VM_TEMPLATE"

	// ROLEACTIONMANAGEVMSNAPSHOT captures enum value "MANAGE_VM_SNAPSHOT"
	ROLEACTIONMANAGEVMSNAPSHOT ROLEACTION = "MANAGE_VM_SNAPSHOT"

	// ROLEACTIONMANAGEVMVOLUME captures enum value "MANAGE_VM_VOLUME"
	ROLEACTIONMANAGEVMVOLUME ROLEACTION = "MANAGE_VM_VOLUME"

	// ROLEACTIONMANAGEISO captures enum value "MANAGE_ISO"
	ROLEACTIONMANAGEISO ROLEACTION = "MANAGE_ISO"

	// ROLEACTIONQUERYSENSITIVERESOURCELIST captures enum value "QUERY_SENSITIVE_RESOURCE_LIST"
	ROLEACTIONQUERYSENSITIVERESOURCELIST ROLEACTION = "QUERY_SENSITIVE_RESOURCE_LIST"

	// ROLEACTIONQUERYSENSITIVERESOURCE captures enum value "QUERY_SENSITIVE_RESOURCE"
	ROLEACTIONQUERYSENSITIVERESOURCE ROLEACTION = "QUERY_SENSITIVE_RESOURCE"

	// ROLEACTIONMANAGESENSITIVERESOURCE captures enum value "MANAGE_SENSITIVE_RESOURCE"
	ROLEACTIONMANAGESENSITIVERESOURCE ROLEACTION = "MANAGE_SENSITIVE_RESOURCE"

	// ROLEACTIONMANAGEVMPLACEMENTGROUP captures enum value "MANAGE_VM_PLACEMENT_GROUP"
	ROLEACTIONMANAGEVMPLACEMENTGROUP ROLEACTION = "MANAGE_VM_PLACEMENT_GROUP"

	// ROLEACTIONMANAGESNAPSHOTPLAN captures enum value "MANAGE_SNAPSHOT_PLAN"
	ROLEACTIONMANAGESNAPSHOTPLAN ROLEACTION = "MANAGE_SNAPSHOT_PLAN"

	// ROLEACTIONMANAGEALERT captures enum value "MANAGE_ALERT"
	ROLEACTIONMANAGEALERT ROLEACTION = "MANAGE_ALERT"

	// ROLEACTIONMANAGEMONITORVIEW captures enum value "MANAGE_MONITOR_VIEW"
	ROLEACTIONMANAGEMONITORVIEW ROLEACTION = "MANAGE_MONITOR_VIEW"

	// ROLEACTIONMANAGEENTITYFILTER captures enum value "MANAGE_ENTITY_FILTER"
	ROLEACTIONMANAGEENTITYFILTER ROLEACTION = "MANAGE_ENTITY_FILTER"

	// ROLEACTIONMANAGECLUSTERBASICINFO captures enum value "MANAGE_CLUSTER_BASIC_INFO"
	ROLEACTIONMANAGECLUSTERBASICINFO ROLEACTION = "MANAGE_CLUSTER_BASIC_INFO"

	// ROLEACTIONMANAGECLUSTERLICENCE captures enum value "MANAGE_CLUSTER_LICENCE"
	ROLEACTIONMANAGECLUSTERLICENCE ROLEACTION = "MANAGE_CLUSTER_LICENCE"

	// ROLEACTIONMANAGECLUSTERSNMP captures enum value "MANAGE_CLUSTER_SNMP"
	ROLEACTIONMANAGECLUSTERSNMP ROLEACTION = "MANAGE_CLUSTER_SNMP"

	// ROLEACTIONMANAGECLUSTERVIP captures enum value "MANAGE_CLUSTER_VIP"
	ROLEACTIONMANAGECLUSTERVIP ROLEACTION = "MANAGE_CLUSTER_VIP"

	// ROLEACTIONMANAGECLUSTERMANAGEMENTIP captures enum value "MANAGE_CLUSTER_MANAGEMENT_IP"
	ROLEACTIONMANAGECLUSTERMANAGEMENTIP ROLEACTION = "MANAGE_CLUSTER_MANAGEMENT_IP"

	// ROLEACTIONMANAGEDNSSERVER captures enum value "MANAGE_DNS_SERVER"
	ROLEACTIONMANAGEDNSSERVER ROLEACTION = "MANAGE_DNS_SERVER"

	// ROLEACTIONMANAGENTPSERVER captures enum value "MANAGE_NTP_SERVER"
	ROLEACTIONMANAGENTPSERVER ROLEACTION = "MANAGE_NTP_SERVER"

	// ROLEACTIONMANAGEIPMI captures enum value "MANAGE_IPMI"
	ROLEACTIONMANAGEIPMI ROLEACTION = "MANAGE_IPMI"

	// ROLEACTIONMANAGECLUSTERVMCPUMODEL captures enum value "MANAGE_CLUSTER_VM_CPU_MODEL"
	ROLEACTIONMANAGECLUSTERVMCPUMODEL ROLEACTION = "MANAGE_CLUSTER_VM_CPU_MODEL"

	// ROLEACTIONMANAGECLUSTERVMTOOLS captures enum value "MANAGE_CLUSTER_VM_TOOLS"
	ROLEACTIONMANAGECLUSTERVMTOOLS ROLEACTION = "MANAGE_CLUSTER_VM_TOOLS"

	// ROLEACTIONMANAGECLUSTERHOTMIGRATION captures enum value "MANAGE_CLUSTER_HOT_MIGRATION"
	ROLEACTIONMANAGECLUSTERHOTMIGRATION ROLEACTION = "MANAGE_CLUSTER_HOT_MIGRATION"

	// ROLEACTIONMANAGECLUSTERHA captures enum value "MANAGE_CLUSTER_HA"
	ROLEACTIONMANAGECLUSTERHA ROLEACTION = "MANAGE_CLUSTER_HA"

	// ROLEACTIONMANAGESSLCERTIFICATE captures enum value "MANAGE_SSL_CERTIFICATE"
	ROLEACTIONMANAGESSLCERTIFICATE ROLEACTION = "MANAGE_SSL_CERTIFICATE"

	// ROLEACTIONMANAGELOGCOLLECTION captures enum value "MANAGE_LOG_COLLECTION"
	ROLEACTIONMANAGELOGCOLLECTION ROLEACTION = "MANAGE_LOG_COLLECTION"

	// ROLEACTIONMANAGELABEL captures enum value "MANAGE_LABEL"
	ROLEACTIONMANAGELABEL ROLEACTION = "MANAGE_LABEL"

	// ROLEACTIONMANAGEUSERANDROLE captures enum value "MANAGE_USER_AND_ROLE"
	ROLEACTIONMANAGEUSERANDROLE ROLEACTION = "MANAGE_USER_AND_ROLE"

	// ROLEACTIONMANAGEPASSWORDSETTINGS captures enum value "MANAGE_PASSWORD_SETTINGS"
	ROLEACTIONMANAGEPASSWORDSETTINGS ROLEACTION = "MANAGE_PASSWORD_SETTINGS"

	// ROLEACTIONMANAGEACCESSCONTROL captures enum value "MANAGE_ACCESS_CONTROL"
	ROLEACTIONMANAGEACCESSCONTROL ROLEACTION = "MANAGE_ACCESS_CONTROL"

	// ROLEACTIONMANAGESESSIONEXPIRATION captures enum value "MANAGE_SESSION_EXPIRATION"
	ROLEACTIONMANAGESESSIONEXPIRATION ROLEACTION = "MANAGE_SESSION_EXPIRATION"

	// ROLEACTIONMANAGEVCENTERASSOCIATION captures enum value "MANAGE_VCENTER_ASSOCIATION"
	ROLEACTIONMANAGEVCENTERASSOCIATION ROLEACTION = "MANAGE_VCENTER_ASSOCIATION"

	// ROLEACTIONMANAGEESXIASSOCIATION captures enum value "MANAGE_ESXI_ASSOCIATION"
	ROLEACTIONMANAGEESXIASSOCIATION ROLEACTION = "MANAGE_ESXI_ASSOCIATION"

	// ROLEACTIONMANAGEAUDITLOG captures enum value "MANAGE_AUDIT_LOG"
	ROLEACTIONMANAGEAUDITLOG ROLEACTION = "MANAGE_AUDIT_LOG"

	// ROLEACTIONMANAGEALERTEMAILSETTING captures enum value "MANAGE_ALERT_EMAIL_SETTING"
	ROLEACTIONMANAGEALERTEMAILSETTING ROLEACTION = "MANAGE_ALERT_EMAIL_SETTING"

	// ROLEACTIONMANAGESMTPSERVER captures enum value "MANAGE_SMTP_SERVER"
	ROLEACTIONMANAGESMTPSERVER ROLEACTION = "MANAGE_SMTP_SERVER"

	// ROLEACTIONMANAGECLUSTERUPGRADE captures enum value "MANAGE_CLUSTER_UPGRADE"
	ROLEACTIONMANAGECLUSTERUPGRADE ROLEACTION = "MANAGE_CLUSTER_UPGRADE"

	// ROLEACTIONMANAGEVMRECYCLEBINSETTING captures enum value "MANAGE_VM_RECYCLE_BIN_SETTING"
	ROLEACTIONMANAGEVMRECYCLEBINSETTING ROLEACTION = "MANAGE_VM_RECYCLE_BIN_SETTING"

	// ROLEACTIONMANAGEREPORT captures enum value "MANAGE_REPORT"
	ROLEACTIONMANAGEREPORT ROLEACTION = "MANAGE_REPORT"

	// ROLEACTIONMANAGESHARINGVMTOOLS captures enum value "MANAGE_SHARING_VM_TOOLS"
	ROLEACTIONMANAGESHARINGVMTOOLS ROLEACTION = "MANAGE_SHARING_VM_TOOLS"

	// ROLEACTIONMANAGEADVANCEDMONITOR captures enum value "MANAGE_ADVANCED_MONITOR"
	ROLEACTIONMANAGEADVANCEDMONITOR ROLEACTION = "MANAGE_ADVANCED_MONITOR"

	// ROLEACTIONMANAGETHIRDPARTYDRIVER captures enum value "MANAGE_THIRD_PARTY_DRIVER"
	ROLEACTIONMANAGETHIRDPARTYDRIVER ROLEACTION = "MANAGE_THIRD_PARTY_DRIVER"

	// ROLEACTIONMANAGEORGANIZATIONNAME captures enum value "MANAGE_ORGANIZATION_NAME"
	ROLEACTIONMANAGEORGANIZATIONNAME ROLEACTION = "MANAGE_ORGANIZATION_NAME"

	// ROLEACTIONMANAGECLOUDTOWERLICENSE captures enum value "MANAGE_CLOUD_TOWER_LICENSE"
	ROLEACTIONMANAGECLOUDTOWERLICENSE ROLEACTION = "MANAGE_CLOUD_TOWER_LICENSE"

	// ROLEACTIONMANAGECONSISTENCYGROUP captures enum value "MANAGE_CONSISTENCY_GROUP"
	ROLEACTIONMANAGECONSISTENCYGROUP ROLEACTION = "MANAGE_CONSISTENCY_GROUP"

	// ROLEACTIONMANAGESRIOVNIC captures enum value "MANAGE_SR_IOV_NIC"
	ROLEACTIONMANAGESRIOVNIC ROLEACTION = "MANAGE_SR_IOV_NIC"

	// ROLEACTIONMANAGECLUSTERISCSI captures enum value "MANAGE_CLUSTER_ISCSI"
	ROLEACTIONMANAGECLUSTERISCSI ROLEACTION = "MANAGE_CLUSTER_ISCSI"

	// ROLEACTIONMANAGEBACKUPLICENSE captures enum value "MANAGE_BACKUP_LICENSE"
	ROLEACTIONMANAGEBACKUPLICENSE ROLEACTION = "MANAGE_BACKUP_LICENSE"

	// ROLEACTIONMANAGEBACKUPPACKAGE captures enum value "MANAGE_BACKUP_PACKAGE"
	ROLEACTIONMANAGEBACKUPPACKAGE ROLEACTION = "MANAGE_BACKUP_PACKAGE"

	// ROLEACTIONMANAGEBACKUPSERVICE captures enum value "MANAGE_BACKUP_SERVICE"
	ROLEACTIONMANAGEBACKUPSERVICE ROLEACTION = "MANAGE_BACKUP_SERVICE"

	// ROLEACTIONMANAGEBACKUPSTOREREPOSITORY captures enum value "MANAGE_BACKUP_STORE_REPOSITORY"
	ROLEACTIONMANAGEBACKUPSTOREREPOSITORY ROLEACTION = "MANAGE_BACKUP_STORE_REPOSITORY"

	// ROLEACTIONMANAGEBACKUPPLAN captures enum value "MANAGE_BACKUP_PLAN"
	ROLEACTIONMANAGEBACKUPPLAN ROLEACTION = "MANAGE_BACKUP_PLAN"

	// ROLEACTIONMANAGEBACKUPTASK captures enum value "MANAGE_BACKUP_TASK"
	ROLEACTIONMANAGEBACKUPTASK ROLEACTION = "MANAGE_BACKUP_TASK"

	// ROLEACTIONMANAGEBACKUPRESTOREPOINT captures enum value "MANAGE_BACKUP_RESTORE_POINT"
	ROLEACTIONMANAGEBACKUPRESTOREPOINT ROLEACTION = "MANAGE_BACKUP_RESTORE_POINT"

	// ROLEACTIONMANAGEBACKUPRESTOREPOINTTASK captures enum value "MANAGE_BACKUP_RESTORE_POINT_TASK"
	ROLEACTIONMANAGEBACKUPRESTOREPOINTTASK ROLEACTION = "MANAGE_BACKUP_RESTORE_POINT_TASK"
)

// for schema
var rOLEACTIONEnum []interface{}

func init() {
	var res []ROLEACTION
	if err := json.Unmarshal([]byte(`["*","MANAGE_DATA_CENTER","MANAGE_CLUSTER_CONNECTION","MANAGE_HOST","MANAGE_NIC_MTU","MANAGE_DISK","MANAGE_HARDWARE_TOPO","MANAGE_USB_DEVICE","MANAGE_VDS","MANAGE_VLAN","MANAGE_SYSTEM_VLAN","MANAGE_ISCSI_DATA_STORE","MANAGE_NFS_DATA_STORE","MANAGE_NVMF_DATA_STORE","CREATE_VM","UPDATE_VM","DELETE_VM","UPDATE_VM_ADVANCED_SETTING","UPDATE_VM_GUEST","VM_OPERATION_OPEN_TERMINAL","VM_OPERATION_MIGRATE","VM_OPERATION_VM_FOLDER","VM_OPERATION_VM_POWER","VM_OPERATION_CLONE","VM_OPERATION_INSTALL_TOOLS","MANAGE_VM_TEMPLATE","MANAGE_VM_SNAPSHOT","MANAGE_VM_VOLUME","MANAGE_ISO","QUERY_SENSITIVE_RESOURCE_LIST","QUERY_SENSITIVE_RESOURCE","MANAGE_SENSITIVE_RESOURCE","MANAGE_VM_PLACEMENT_GROUP","MANAGE_SNAPSHOT_PLAN","MANAGE_ALERT","MANAGE_MONITOR_VIEW","MANAGE_ENTITY_FILTER","MANAGE_CLUSTER_BASIC_INFO","MANAGE_CLUSTER_LICENCE","MANAGE_CLUSTER_SNMP","MANAGE_CLUSTER_VIP","MANAGE_CLUSTER_MANAGEMENT_IP","MANAGE_DNS_SERVER","MANAGE_NTP_SERVER","MANAGE_IPMI","MANAGE_CLUSTER_VM_CPU_MODEL","MANAGE_CLUSTER_VM_TOOLS","MANAGE_CLUSTER_HOT_MIGRATION","MANAGE_CLUSTER_HA","MANAGE_SSL_CERTIFICATE","MANAGE_LOG_COLLECTION","MANAGE_LABEL","MANAGE_USER_AND_ROLE","MANAGE_PASSWORD_SETTINGS","MANAGE_ACCESS_CONTROL","MANAGE_SESSION_EXPIRATION","MANAGE_VCENTER_ASSOCIATION","MANAGE_ESXI_ASSOCIATION","MANAGE_AUDIT_LOG","MANAGE_ALERT_EMAIL_SETTING","MANAGE_SMTP_SERVER","MANAGE_CLUSTER_UPGRADE","MANAGE_VM_RECYCLE_BIN_SETTING","MANAGE_REPORT","MANAGE_SHARING_VM_TOOLS","MANAGE_ADVANCED_MONITOR","MANAGE_THIRD_PARTY_DRIVER","MANAGE_ORGANIZATION_NAME","MANAGE_CLOUD_TOWER_LICENSE","MANAGE_CONSISTENCY_GROUP","MANAGE_SR_IOV_NIC","MANAGE_CLUSTER_ISCSI","MANAGE_BACKUP_LICENSE","MANAGE_BACKUP_PACKAGE","MANAGE_BACKUP_SERVICE","MANAGE_BACKUP_STORE_REPOSITORY","MANAGE_BACKUP_PLAN","MANAGE_BACKUP_TASK","MANAGE_BACKUP_RESTORE_POINT","MANAGE_BACKUP_RESTORE_POINT_TASK"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		rOLEACTIONEnum = append(rOLEACTIONEnum, v)
	}
}

func (m ROLEACTION) validateROLEACTIONEnum(path, location string, value ROLEACTION) error {
	if err := validate.EnumCase(path, location, value, rOLEACTIONEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this r o l e a c t i o n
func (m ROLEACTION) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateROLEACTIONEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this r o l e a c t i o n based on context it is used
func (m ROLEACTION) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
