// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_router_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new virtual private cloud router gateway API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for virtual private cloud router gateway API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateVirtualPrivateCloudRouterGateway(params *CreateVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*CreateVirtualPrivateCloudRouterGatewayOK, error)

	DeleteVirtualPrivateCloudRouterGateway(params *DeleteVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudRouterGatewayOK, error)

	GetVirtualPrivateCloudRouterGateways(params *GetVirtualPrivateCloudRouterGatewaysParams, opts ...ClientOption) (*GetVirtualPrivateCloudRouterGatewaysOK, error)

	GetVirtualPrivateCloudRouterGatewaysConnection(params *GetVirtualPrivateCloudRouterGatewaysConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudRouterGatewaysConnectionOK, error)

	UpdateVirtualPrivateCloudRouterGateway(params *UpdateVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudRouterGatewayOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateVirtualPrivateCloudRouterGateway create virtual private cloud router gateway API
*/
func (a *Client) CreateVirtualPrivateCloudRouterGateway(params *CreateVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*CreateVirtualPrivateCloudRouterGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateVirtualPrivateCloudRouterGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateVirtualPrivateCloudRouterGateway",
		Method:             "POST",
		PathPattern:        "/create-virtual-private-cloud-router-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateVirtualPrivateCloudRouterGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateVirtualPrivateCloudRouterGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateVirtualPrivateCloudRouterGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteVirtualPrivateCloudRouterGateway delete virtual private cloud router gateway API
*/
func (a *Client) DeleteVirtualPrivateCloudRouterGateway(params *DeleteVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudRouterGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteVirtualPrivateCloudRouterGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteVirtualPrivateCloudRouterGateway",
		Method:             "POST",
		PathPattern:        "/delete-virtual-private-cloud-router-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteVirtualPrivateCloudRouterGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteVirtualPrivateCloudRouterGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteVirtualPrivateCloudRouterGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudRouterGateways get virtual private cloud router gateways API
*/
func (a *Client) GetVirtualPrivateCloudRouterGateways(params *GetVirtualPrivateCloudRouterGatewaysParams, opts ...ClientOption) (*GetVirtualPrivateCloudRouterGatewaysOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudRouterGatewaysParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudRouterGateways",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-router-gateways",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudRouterGatewaysReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudRouterGatewaysOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudRouterGateways: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudRouterGatewaysConnection get virtual private cloud router gateways connection API
*/
func (a *Client) GetVirtualPrivateCloudRouterGatewaysConnection(params *GetVirtualPrivateCloudRouterGatewaysConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudRouterGatewaysConnectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudRouterGatewaysConnectionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudRouterGatewaysConnection",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-router-gateways-connection",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudRouterGatewaysConnectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudRouterGatewaysConnectionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudRouterGatewaysConnection: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateVirtualPrivateCloudRouterGateway update virtual private cloud router gateway API
*/
func (a *Client) UpdateVirtualPrivateCloudRouterGateway(params *UpdateVirtualPrivateCloudRouterGatewayParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudRouterGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateVirtualPrivateCloudRouterGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateVirtualPrivateCloudRouterGateway",
		Method:             "POST",
		PathPattern:        "/update-virtual-private-cloud-router-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateVirtualPrivateCloudRouterGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateVirtualPrivateCloudRouterGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateVirtualPrivateCloudRouterGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
