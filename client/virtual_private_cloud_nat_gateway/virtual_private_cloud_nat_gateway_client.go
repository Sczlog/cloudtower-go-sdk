// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_nat_gateway

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new virtual private cloud nat gateway API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for virtual private cloud nat gateway API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateVirtualPrivateCloudNatGateway(params *CreateVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*CreateVirtualPrivateCloudNatGatewayOK, error)

	DeleteVirtualPrivateCloudNatGateway(params *DeleteVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudNatGatewayOK, error)

	GetVirtualPrivateCloudNatGateways(params *GetVirtualPrivateCloudNatGatewaysParams, opts ...ClientOption) (*GetVirtualPrivateCloudNatGatewaysOK, error)

	GetVirtualPrivateCloudNatGatewaysConnection(params *GetVirtualPrivateCloudNatGatewaysConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudNatGatewaysConnectionOK, error)

	UpdateVirtualPrivateCloudNatGateway(params *UpdateVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudNatGatewayOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateVirtualPrivateCloudNatGateway create virtual private cloud nat gateway API
*/
func (a *Client) CreateVirtualPrivateCloudNatGateway(params *CreateVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*CreateVirtualPrivateCloudNatGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateVirtualPrivateCloudNatGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateVirtualPrivateCloudNatGateway",
		Method:             "POST",
		PathPattern:        "/create-virtual-private-cloud-nat-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateVirtualPrivateCloudNatGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateVirtualPrivateCloudNatGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateVirtualPrivateCloudNatGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteVirtualPrivateCloudNatGateway delete virtual private cloud nat gateway API
*/
func (a *Client) DeleteVirtualPrivateCloudNatGateway(params *DeleteVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudNatGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteVirtualPrivateCloudNatGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteVirtualPrivateCloudNatGateway",
		Method:             "POST",
		PathPattern:        "/delete-virtual-private-cloud-nat-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteVirtualPrivateCloudNatGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteVirtualPrivateCloudNatGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteVirtualPrivateCloudNatGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudNatGateways get virtual private cloud nat gateways API
*/
func (a *Client) GetVirtualPrivateCloudNatGateways(params *GetVirtualPrivateCloudNatGatewaysParams, opts ...ClientOption) (*GetVirtualPrivateCloudNatGatewaysOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudNatGatewaysParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudNatGateways",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-nat-gateways",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudNatGatewaysReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudNatGatewaysOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudNatGateways: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudNatGatewaysConnection get virtual private cloud nat gateways connection API
*/
func (a *Client) GetVirtualPrivateCloudNatGatewaysConnection(params *GetVirtualPrivateCloudNatGatewaysConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudNatGatewaysConnectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudNatGatewaysConnectionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudNatGatewaysConnection",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-nat-gateways-connection",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudNatGatewaysConnectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudNatGatewaysConnectionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudNatGatewaysConnection: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateVirtualPrivateCloudNatGateway update virtual private cloud nat gateway API
*/
func (a *Client) UpdateVirtualPrivateCloudNatGateway(params *UpdateVirtualPrivateCloudNatGatewayParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudNatGatewayOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateVirtualPrivateCloudNatGatewayParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateVirtualPrivateCloudNatGateway",
		Method:             "POST",
		PathPattern:        "/update-virtual-private-cloud-nat-gateway",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateVirtualPrivateCloudNatGatewayReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateVirtualPrivateCloudNatGatewayOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateVirtualPrivateCloudNatGateway: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
