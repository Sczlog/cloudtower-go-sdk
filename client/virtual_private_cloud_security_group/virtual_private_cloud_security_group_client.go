// Code generated by go-swagger; DO NOT EDIT.

package virtual_private_cloud_security_group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new virtual private cloud security group API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for virtual private cloud security group API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientOption is the option for Client methods
type ClientOption func(*runtime.ClientOperation)

// ClientService is the interface for Client methods
type ClientService interface {
	CreateVirtualPrivateCloudSecurityGroup(params *CreateVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*CreateVirtualPrivateCloudSecurityGroupOK, error)

	DeleteVirtualPrivateCloudSecurityGroup(params *DeleteVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudSecurityGroupOK, error)

	GetVirtualPrivateCloudSecurityGroups(params *GetVirtualPrivateCloudSecurityGroupsParams, opts ...ClientOption) (*GetVirtualPrivateCloudSecurityGroupsOK, error)

	GetVirtualPrivateCloudSecurityGroupsConnection(params *GetVirtualPrivateCloudSecurityGroupsConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudSecurityGroupsConnectionOK, error)

	UpdateVirtualPrivateCloudSecurityGroup(params *UpdateVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudSecurityGroupOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  CreateVirtualPrivateCloudSecurityGroup create virtual private cloud security group API
*/
func (a *Client) CreateVirtualPrivateCloudSecurityGroup(params *CreateVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*CreateVirtualPrivateCloudSecurityGroupOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewCreateVirtualPrivateCloudSecurityGroupParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "CreateVirtualPrivateCloudSecurityGroup",
		Method:             "POST",
		PathPattern:        "/create-virtual-private-cloud-security-group",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &CreateVirtualPrivateCloudSecurityGroupReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*CreateVirtualPrivateCloudSecurityGroupOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for CreateVirtualPrivateCloudSecurityGroup: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  DeleteVirtualPrivateCloudSecurityGroup delete virtual private cloud security group API
*/
func (a *Client) DeleteVirtualPrivateCloudSecurityGroup(params *DeleteVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*DeleteVirtualPrivateCloudSecurityGroupOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewDeleteVirtualPrivateCloudSecurityGroupParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "DeleteVirtualPrivateCloudSecurityGroup",
		Method:             "POST",
		PathPattern:        "/delete-virtual-private-cloud-security-group",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &DeleteVirtualPrivateCloudSecurityGroupReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*DeleteVirtualPrivateCloudSecurityGroupOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for DeleteVirtualPrivateCloudSecurityGroup: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudSecurityGroups get virtual private cloud security groups API
*/
func (a *Client) GetVirtualPrivateCloudSecurityGroups(params *GetVirtualPrivateCloudSecurityGroupsParams, opts ...ClientOption) (*GetVirtualPrivateCloudSecurityGroupsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudSecurityGroupsParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudSecurityGroups",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-security-groups",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudSecurityGroupsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudSecurityGroupsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudSecurityGroups: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetVirtualPrivateCloudSecurityGroupsConnection get virtual private cloud security groups connection API
*/
func (a *Client) GetVirtualPrivateCloudSecurityGroupsConnection(params *GetVirtualPrivateCloudSecurityGroupsConnectionParams, opts ...ClientOption) (*GetVirtualPrivateCloudSecurityGroupsConnectionOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetVirtualPrivateCloudSecurityGroupsConnectionParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "GetVirtualPrivateCloudSecurityGroupsConnection",
		Method:             "POST",
		PathPattern:        "/get-virtual-private-cloud-security-groups-connection",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &GetVirtualPrivateCloudSecurityGroupsConnectionReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetVirtualPrivateCloudSecurityGroupsConnectionOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetVirtualPrivateCloudSecurityGroupsConnection: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  UpdateVirtualPrivateCloudSecurityGroup update virtual private cloud security group API
*/
func (a *Client) UpdateVirtualPrivateCloudSecurityGroup(params *UpdateVirtualPrivateCloudSecurityGroupParams, opts ...ClientOption) (*UpdateVirtualPrivateCloudSecurityGroupOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewUpdateVirtualPrivateCloudSecurityGroupParams()
	}
	op := &runtime.ClientOperation{
		ID:                 "UpdateVirtualPrivateCloudSecurityGroup",
		Method:             "POST",
		PathPattern:        "/update-virtual-private-cloud-security-group",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"http"},
		Params:             params,
		Reader:             &UpdateVirtualPrivateCloudSecurityGroupReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	}
	for _, opt := range opts {
		opt(op)
	}

	result, err := a.transport.Submit(op)
	if err != nil {
		return nil, err
	}
	success, ok := result.(*UpdateVirtualPrivateCloudSecurityGroupOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for UpdateVirtualPrivateCloudSecurityGroup: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
